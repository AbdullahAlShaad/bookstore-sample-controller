// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/Shaad7/bookstore-sample-controller/pkg/apis/gopher/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// BookstoreLister helps list Bookstores.
// All objects returned here must be treated as read-only.
type BookstoreLister interface {
	// List lists all Bookstores in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Bookstore, err error)
	// Bookstores returns an object that can list and get Bookstores.
	Bookstores(namespace string) BookstoreNamespaceLister
	BookstoreListerExpansion
}

// bookstoreLister implements the BookstoreLister interface.
type bookstoreLister struct {
	indexer cache.Indexer
}

// NewBookstoreLister returns a new BookstoreLister.
func NewBookstoreLister(indexer cache.Indexer) BookstoreLister {
	return &bookstoreLister{indexer: indexer}
}

// List lists all Bookstores in the indexer.
func (s *bookstoreLister) List(selector labels.Selector) (ret []*v1alpha1.Bookstore, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Bookstore))
	})
	return ret, err
}

// Bookstores returns an object that can list and get Bookstores.
func (s *bookstoreLister) Bookstores(namespace string) BookstoreNamespaceLister {
	return bookstoreNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// BookstoreNamespaceLister helps list and get Bookstores.
// All objects returned here must be treated as read-only.
type BookstoreNamespaceLister interface {
	// List lists all Bookstores in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Bookstore, err error)
	// Get retrieves the Bookstore from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.Bookstore, error)
	BookstoreNamespaceListerExpansion
}

// bookstoreNamespaceLister implements the BookstoreNamespaceLister
// interface.
type bookstoreNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Bookstores in the indexer for a given namespace.
func (s bookstoreNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.Bookstore, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Bookstore))
	})
	return ret, err
}

// Get retrieves the Bookstore from the indexer for a given namespace and name.
func (s bookstoreNamespaceLister) Get(name string) (*v1alpha1.Bookstore, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("bookstore"), name)
	}
	return obj.(*v1alpha1.Bookstore), nil
}
